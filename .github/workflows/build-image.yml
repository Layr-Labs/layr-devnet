name: Docker Build CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - "*"
jobs:
  build-geth:
    # needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build & push geth image
        env:
          REGISTRY: "767397703211.dkr.ecr.us-east-1.amazonaws.com"
          REPOSITORY: ${{ github.event.repository.name }}/geth
          IMAGE_TAG: ${{ github.sha }}
          PLATFORMS: "linux/amd64"
        run: |
          docker buildx build --platform $PLATFORMS -t $REGISTRY/$REPOSITORY:$IMAGE_TAG --push -f ./go-ethereum/Dockerfile .
  build-prysm:
    # needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build & push geth image
        env:
          REGISTRY: "767397703211.dkr.ecr.us-east-1.amazonaws.com"
          REPOSITORY: ${{ github.event.repository.name }}/prysm
          IMAGE_TAG: ${{ github.sha }}
          PLATFORMS: "linux/amd64"
        run: |
          docker buildx build --platform $PLATFORMS -t $REGISTRY/$REPOSITORY:$IMAGE_TAG --push ./prysm/Dockerfile .
  deploy:
    needs: [build-geth, build-prysm]
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/master'
    environment: "devnet"
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Update Kubeconfig
      run: aws eks update-kubeconfig --name protocol-preprod --region ${{ secrets.AWS_REGION }}
      shell: bash

    - uses: azure/setup-helm@v3
      id: install

    - name: Deploy preprod-holesky
      env:
        JSON_STRING: ${{ secrets.GETH_ACCOUNTS }}
      run: |
        helm --kube-context=protocol-preprod upgrade --install \
          --atomic \
          --cleanup-on-fail \
          --timeout 2m \
          --force \
          --debug \
          --wait  \
          --version=${{ github.sha }} \
          --namespace layr-devnet \
          --set images.geth.tag="${{ github.sha }}" \
          --set images.prysm.tag="${{ github.sha }}" \
          --set 'common.jwtSecret.values.jwtSecret=${{ secrets.JWT_SECRET }}' \
          --set 'common.gethPassword.values.gethPassword=${{ secrets.GETH_ACCOUNT_PASSWORD }}' \
          --set common.secret.values.VALIDATOR_SECRET='${{ secrets.GETH_ACCOUNT_PASSWORD }}' \
          --set-string "common.gethKeys.values.defaultAccount=$(echo $JSON_STRING | base64)" \
          layr-devnet ./layr-devnet
          
